apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
  name: pihole
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: pihole
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
        - env:
            - name: ServerIP
              value: 192.168.1.2
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: pihole-webpassword
            - name: TZ
              value: Atlantic/Reykjavik
          image: pihole/pihole:latest
          imagePullPolicy: Always
          name: pihole
          ports:
            - containerPort: 80
              name: pihole-http
              protocol: TCP
            - containerPort: 53
              name: dns
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 443
              name: pihole-ssl
              protocol: TCP
            - containerPort: 67
              name: client-udp
              protocol: UDP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: host-disk1
              mountPath: /etc/pihole
              subPath: pihole
            - mountPath: /etc/dnsmasq.d/02-custom.conf
              name: host-disk1
              subPath: pihole/dnsmasq
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: host-disk1
          hostPath:
            path: /disk1
status: {}
